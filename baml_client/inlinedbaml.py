###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}",
    "crypto_sentiment.baml": "// Defining a data model.\nclass CryptoSentiment {\n  coin Coin\n  score Score\n  reason string\n}\n\nenum Coin {\n  Bitcoin\n  Ethereum\n  // Solana\n  // Cardano\n  // Ripple\n  // Litecoin\n  // Polkadot\n  // Chainlink\n  // Dogecoin\n  // ShibaInu\n}\n\nenum Score {\n  Positive @description(\"Positive sentiment\")\n  Negative @description(\"Negative sentiment\")\n  Neutral @description(\"Neutral sentiment\")\n}\n\n// Create a function to extract the resume from a string.\nfunction ExtractCryptoSentiment(news: string) -> CryptoSentiment[] {\n  // Specify a client as provider/model-name\n  // you can use custom LLM params with a custom client name from clients.baml like \"client CustomHaiku\"\n  client CustomSonnet // Set OPENAI_API_KEY to use this client.\n  prompt #\"\n    You are an expert crypto financial analyst with deep knowledge of market dynamics and sentiment analysis.\n    Analyze the following news story and determine its potential impact on crypto asset prices.\n    Focus on both direct mentions and indirect implications for each asset.\n\n    Do not output data for a given coin if the news is not relevant to it.\n    \n    Provide a reason behind each score, in one straightforward sentence.\n    {{ news }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest news_1 {\n  functions [ExtractCryptoSentiment]\n  args {\n    news #\"\n      Fed Chair Jerome Powell said in a recent speech that the central bank is closely monitoring inflation and may consider further rate hikes if necessary. This has led to speculation about the potential impact on Bitcoin and Ethereum prices.\n      Additionally, the recent partnership between Visa and a leading blockchain platform has sparked interest in the future of digital payments and their implications for cryptocurrencies.\n      Bitcoin has seen a surge in interest from institutional investors, while Ethereum's transition to proof-of-stake is expected to enhance its scalability and security.\n    \"#\n  }\n}\n\ntest news_2 {\n  functions [ExtractCryptoSentiment]\n  args {\n    news #\"\n      FED will raise interest rates.\n    \"#\n  }\n}\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.88.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "resume.baml": "// Defining a data model.\nclass Resume {\n  name string\n  email string\n  experience string[]\n  skills string[]\n}\n\n// Create a function to extract the resume from a string.\nfunction ExtractResume(resume: string) -> Resume {\n  // Specify a client as provider/model-name\n  // you can use custom LLM params with a custom client name from clients.baml like \"client CustomHaiku\"\n  client CustomSonnet // Set OPENAI_API_KEY to use this client.\n  prompt #\"\n    Extract from this content:\n    {{ resume }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest vaibhav_resume {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      Vaibhav Gupta\n      vbv@boundaryml.com\n\n      Experience:\n      - Founder at BoundaryML\n      - CV Engineer at Google\n      - CV Engineer at Microsoft\n\n      Skills:\n      - Rust\n      - C++\n    \"#\n  }\n}\n\ntest pau_resume_2 {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      Pau Labarta Bajo\n\n      He is a great guy who worked at Erste and can code\n      in Python and Rust.\n\n      He is not that good at C++.\n    \"#\n  }\n}\n\ntest pau_resume_3 {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      My name is Pau Labarta Bajo.\n    I am a software engineer with experience in Python, JavaScript, and C++.\n    I have worked on various projects, including web applications and data analysis tools.\n    I am passionate about technology and always eager to learn new skills.\n\n    plabartabajo@gmail.com\n    \"#\n  }\n}\n",
}

def get_baml_files():
    return file_map